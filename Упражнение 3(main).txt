RailwayStation.java
public class RailwayStation {

    // Метод 1: Принимает один объект Train и показывает полную информацию
    public static void printTrainInfo(Train train) {
        System.out.println("=== Информация о поезде ===");
        System.out.println("Номер: " + train.getTrainNumber());
        System.out.println("Направление: " + train.getDestination());
        System.out.println("Время: " + train.getDepartureTime());
        System.out.println("Свободные места: " + train.getAvailableSeats());
    }

    // Метод 2: Принимает два объекта (Passenger и Train) - бронирование
    public static void bookTicket(Passenger passenger, Train train, int seats) {
        System.out.println("\n=== Бронирование билета ===");
        System.out.println("Пассажир: " + passenger.getName());
        System.out.println("Поезд: " + train.getTrainNumber() + " -> " + train.getDestination());

        boolean success = train.bookSeats(seats);
        if (success) {
            System.out.println("✅ Успешно забронировано " + seats + " мест");
        } else {
            System.out.println("❌ Не удалось забронировать");
        }
    }

    // Метод 3: Принимает два объекта Train и сравнивает их
    public static void compareTrains(Train train1, Train train2) {
        System.out.println("\n=== Сравнение поездов ===");
        System.out.println("Поезд " + train1.getTrainNumber() + ": " + train1.getAvailableSeats() + " мест");
        System.out.println("Поезд " + train2.getTrainNumber() + ": " + train2.getAvailableSeats() + " мест");

        if (train1.getAvailableSeats() > train2.getAvailableSeats()) {
            System.out.println("В поезде " + train1.getTrainNumber() + " больше мест");
        } else {
            System.out.println("В поезде " + train2.getTrainNumber() + " больше мест");
        }
    }

    // Метод 4: Принимает массив поездов
    public static void showAllTrains(Train[] trains) {
        System.out.println("\n=== Все поезда ===");
        for (int i = 0; i < trains.length; i++) {
            System.out.println((i + 1) + ". " + trains[i].getTrainNumber() + " -> " + trains[i].getDestination());
        }
    }

    // Главный метод
    public static void main(String[] args) {
        System.out.println("Упражнение 3: Объекты как аргументы функций");
        System.out.println("===========================================");

        // Создаем объекты
        Train train1 = new Train("001А", "Москва", "08:00", 150);
        Train train2 = new Train("205Б", "Санкт-Петербург", "12:30", 45);
        Train train3 = new Train("314В", "Сочи", "18:15", 3);
        Passenger passenger1 = new Passenger("Иванов Иван", "1234 567890", 35);
        Passenger passenger2 = new Passenger("Петрова Мария", "9876 543210", 28);

        // Демонстрируем передачу объектов в методы
        // Один объект
        printTrainInfo(train1);
        // Два разных объекта
        bookTicket(passenger1, train1, 2);
        // Два одинаковых объекта
        compareTrains(train1, train2);
        // Массив объектов
        Train[] trains = {train1, train2, train3};
        showAllTrains(trains);
        bookTicket(passenger2, train3, 5);
    }
}



